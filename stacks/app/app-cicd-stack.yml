AWSTemplateFormatVersion: "2010-09-09"
Description: Template creates Codebuild resources for Tbr backend

Parameters:
    env:
        Type: String

    ConnectionArn:
        Type: String
    
    RepositoryId:
      Type: String

    BranchName:
      Type: String

    CICDBucketLocation:
      Type: String

    HostingBucketName:
      Type: String

    CloudFrontDistributionID:
      Type: String

    CognitoPoolId:
        Type: String

    CognitoClientId:
        Type: String

Resources:
  CodePipelineServiceRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      RoleName: !Sub ${env}-iam-role-codepipeline-cicd-app
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "codepipeline.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
  CodePipelineServiceRolePolicies: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "root"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Action:
              - iam:PassRole
            Resource: '*'
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
          - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GeTbranch
              - codecommit:GetCommit
              - codecommit:GetRepository
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
            Resource: '*'
            Effect: Allow
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Resource: '*'
            Effect: Allow
          - Action:
              - codestar-connections:UseConnection
            Resource: '*'
            Effect: Allow
          - Action:
              - codebuild:*
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - ecr:*
              - kms:*
              - secretsmanager:*
              - ssm:*
            Resource: '*'
            Effect: Allow
      Roles: 
        - Ref: "CodePipelineServiceRole"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub Tbr-app-${env}-codebuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub 'buildspec.yml'
      TimeoutInMinutes: 60

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub Tbr-app-${env}-iam-role-codebuild-cicd
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
                - 's3:*'
                - 'ecr:*'
                - 'cloudfront:*'
                Effect: Allow
                Resource: '*'

  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline 

    Properties: 
      RoleArn: !GetAtt 'CodePipelineServiceRole.Arn'
      Name: !Sub Tbr-app-${env}-codepipeline
      ArtifactStore: 
        Type: S3 
        Location: !Ref CICDBucketLocation
      Stages: 
        - 
          Name: Source
          Actions:
            - InputArtifacts: []
              ActionTypeId:
                Version: '1'
                Owner: AWS
                Category: Source
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref RepositoryId
                BranchName: !Ref BranchName
                OutputArtifactFormat: "CODE_ZIP"
              Name: Source
              Namespace: SourceVariables
        -
          Name: Build
          Actions:
            - Name: Build
              Namespace: BuildVariables
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: api
                EnvironmentVariables: !Sub '[{"name":"BUCKET_NAME","value":"${HostingBucketName}","type":"PLAINTEXT"},{"name":"CLOUDFRONT_ID","value":"${CloudFrontDistributionID}","type":"PLAINTEXT"},{"name":"COGNITO_POOL_ID","value":"${CognitoPoolId}","type":"PLAINTEXT"}, {"name":"COGNITO_CLIENT_ID","value":"${CognitoClientId}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
